{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AAEM,MAAOA,aAAa;EAA1BC,YAAA;IACE,KAAAC,MAAM,GAAW,EAAE;IACnB,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,aAAa,GAAW,EAAE;IAC1B,KAAAC,aAAa,GAAW,EAAE;IAC1B,KAAAC,QAAQ,GAAU,CAAC;IACnB,KAAAC,YAAY,GAAU,CAAC;IACvB,KAAAC,KAAK,GAAG,IAAIC,IAAI,EAAE;IAClB,KAAAC,KAAK,GAAG,IAAID,IAAI,EAAE;IAClB,KAAAE,WAAW,GAAK,IAAIC,eAAe,EAAE;IACrC,KAAAC,WAAW,GAAW,KAAK;IAC3B,KAAAC,YAAY,GAAC,IAAIC,eAAe,EAAE;IAClC,KAAAC,aAAa,GAAC,IAAID,eAAe,EAAE;IACnC,KAAAE,cAAc,GAAC,IAAIF,eAAe,EAAE;IACpC,KAAAG,UAAU,GAAiB,EAAE;IAC7B,KAAAC,QAAQ,GAAW,KAAK;EAC1B;;AAEA,MAAMV,IAAI;EAAVT,YAAA;IACE,KAAAE,IAAI,GAAW,EAAE;IACjB,KAAAkB,iBAAiB,GAAW,EAAE;IAC9B,KAAAC,SAAS,GAAU,KAAK;IACxB,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,OAAO,GAAI,IAAIC,UAAU,EAAE;IAC3B,KAAAC,QAAQ,GAAE,IAAID,UAAU,EAAE;IAC1B,KAAAE,OAAO,GAAE,IAAIF,UAAU,EAAE;IACzB,KAAAG,OAAO,GAAE,IAAIH,UAAU,EAAE;IACzB,KAAAI,OAAO,GAAE,IAAIJ,UAAU,EAAE;IACzB,KAAAK,QAAQ,GAAY,EAAE;IACtB,KAAAC,eAAe,GAAY,EAAE;IAC7B,KAAAC,OAAO,GAAgB,EAAE;EAC3B;;AAmBM,MAAOP,UAAU;EAAvBxB,YAAA;IACE,KAAAC,MAAM,GAAW,EAAE;IACnB,KAAA+B,YAAY,GAAW,EAAE;IACzB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,mBAAmB,GAAW,EAAE;IAChC,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAjC,IAAI,GAAW,EAAE;IACjB,KAAAkC,QAAQ,GAAW,EAAE;IACrB,KAAAC,MAAM,GAAW,CAAC;IAClB,KAAAC,IAAI,GAAW,CAAC;IAChB,KAAAC,WAAW,GAAW,CAAC;IACvB,KAAAC,UAAU,GAAY,KAAK;IAC3B,KAAAC,WAAW,GAAW,CAAC;IACvB,KAAApB,SAAS,GAAY,KAAK;IAC1B,KAAAqB,UAAU,GAAY,KAAK;IAC3B,KAAAC,OAAO,GAAW,CAAC;IACnB,KAAAC,UAAU,GAAW,CAAC;IACtB,KAAAC,cAAc,GAAW,EAAE;IAE3B,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,OAAO,GAAY,KAAK;IACxB,KAAAC,OAAO,GAAY,KAAK;IACxB,KAAAC,QAAQ,GAAY,KAAK;IACzB,KAAAC,UAAU,GAAW,CAAC;IACtB,KAAAC,iBAAiB,GAAY,KAAK;EACpC;;AAeM,MAAOrC,eAAe;EAA5Bf,YAAA;IACE,KAAAE,IAAI,GAAU,KAAK;IACnB,KAAAmD,IAAI,GAAG,KAAK;IACZ,KAAAC,OAAO,GAAE,IAAI9B,UAAU,EAAE;IACzB,KAAAE,OAAO,GAAC,IAAIF,UAAU,EAAE;IACxB,KAAA+B,WAAW,GAAS,IAAI9C,IAAI,EAAE;IAC9B,KAAA+C,WAAW,GAAS,IAAI/C,IAAI,EAAE;IAC9B,KAAAgC,WAAW,GAAU,CAAC;IACtB,KAAAgB,OAAO,GAAW,CAAC;IACnB,KAAAnB,IAAI,GAAU,CAAC;EACjB;;AAcM,MAAO1B,eAAe;EAA5BZ,YAAA;IACE,KAAA0D,YAAY,GAAY,KAAK;IAC7B,KAAAC,eAAe,GAAE,IAAInC,UAAU,EAAE;IAChC,KAAAoC,eAAe,GAAE,IAAIpC,UAAU,EAAE;IACjC,KAAAqC,iBAAiB,GAAE,IAAIrC,UAAU,EAAE;IACnC,KAAAsC,kBAAkB,GAAE,IAAItC,UAAU,EAAE;IACpC,KAAAuC,mBAAmB,GAAW,EAAE;IAChC,KAAAC,oBAAoB,GAAW,EAAE;EACpC;;AAEO,IAAKC,WAIX;AAJD,WAAYA,WAAW;EAEnBA,WAAA,CAAAA,WAAA,wBAAS;EACTA,WAAA,CAAAA,WAAA,0BAAU;AACd,CAAC,EAJWA,WAAW,KAAXA,WAAW;AAMhB,IAAMC,YAKZ;AALD,WAAaA,YAAY;EAErBA,YAAA,CAAAA,YAAA,0BAAM;EACNA,YAAA,CAAAA,YAAA,8BAAQ;EACRA,YAAA,CAAAA,YAAA,oCAAW;AACf,CAAC,EALYA,YAAY,KAAZA,YAAY;AAMnB,MAAQC,MAAM;EAApBnE,YAAA;IAEI,KAAAoE,UAAU,GAAW,IAAI3D,IAAI,EAAE;IAC/B,KAAA4D,YAAY,GAAiBH,YAAY,CAACI,MAAM;IAEhD,KAAAC,QAAQ,GAAW,CAAC;IACpB,KAAAC,WAAW,GAAU,CAAC;IACtB,KAAAhE,KAAK,GAAQ,IAAIC,IAAI,EAAE;IACvB,KAAAC,KAAK,GAAS,IAAID,IAAI,EAAE;EAC5B;;;;;;;;;;;;;;;;;;;ACpJ6C;AACa;AAIjC;;;AAEzB,MAAMmE,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,OAAO;EAAEC,SAAS,EAAE;AAAM,CAAE,EACpD;EACEF,IAAI,EAAE,EAAE;EACRG,QAAQ,EAAE,CACR;IACEH,IAAI,EAAE,OAAO;IACbI,YAAY,EAAEA,CAAA,KACZ,4JAA8B,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,WAAW;GAC3D,EACD;IACEP,IAAI,EAAE,MAAM;IACZI,YAAY,EAAEA,CAAA,KACZ,wJAA4B,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACE,UAAU;GACxD,EACD;IACER,IAAI,EAAE,QAAQ;IACdI,YAAY,EAAEA,CAAA,KACZ,gKAAgC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACG,YAAY;GAC9D;CAEJ;AAED;AACA;AACA;EAAET,IAAI,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAM,CAAE,CACnC;AAID,MAIaS,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHjBb,oEAAa,EAACD,uDAAW,EAAEE,yDAAY,CAACa,OAAO,CAACZ,MAAM,EAAG;IAACa,OAAO,EAAC;EAAI,CAAC,CAAC,EACxEd,yDAAY;AAAA;AAEK;;sHAAhBY,gBAAgB;IAAAG,OAAA,GAHjBhB,oEAAa,EAACD,uDAAW,EAAAkB,yDAAA;IAAAC,OAAA,GACzBjB,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACvCqD;AAEnC;;;;;AAI1C;AACA,MAKaqB,YAAY;EAGvB;;;EAGAhG,YACUiG,aAA4B,EAC5BC,mBAA+C,EAC/CC,MAAc;IAFd,KAAAF,aAAa,GAAbA,aAAa;IACb,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,MAAM,GAANA,MAAM;IARhB,KAAAC,KAAK,GAAG,OAAO;IAWb;IACAH,aAAa,CAACI,OAAO,CAACC,EAAE,CAACT,sEAAU,CAACU,iBAAiB,EAAGC,IAAI,IAAI;MAC9DT,oDAAc,CAACU,MAAM,CAACZ,sEAAU,CAACU,iBAAiB,EAAEC,IAAI,CAAC;IAC3D,CAAC,CAAC;IAEF;IACAT,oDAAc,CAACO,EAAE,CAACT,sEAAU,CAACa,iBAAiB,EAAGF,IAAoB,IAAI;MACvEP,aAAa,CAACU,aAAa,GAAGH,IAAI,CAACtF,UAAU,CAAC0F,IAAI,CAC/CC,CAAC,IAAKA,CAAC,CAAC3E,mBAAmB,IAAI6D,oDAAc,CAACe,YAAY,CAC3D;MACFb,aAAa,CAACc,SAAS,GAAGP,IAAI;MAC9BP,aAAa,CAACI,OAAO,CAACW,IAAI,CAACnB,sEAAU,CAACoB,cAAc,EAAET,IAAI,CAAC;MAC3D;MACA,IAAI,CAACN,mBAAmB,CAACgB,OAAO,CAAC,WAAW,EAAEV,IAAI,CAAC;IACrD,CAAC,CAAC;IAEF;IAEA;IAEAT,oDAAc,CAACO,EAAE,CAACT,sEAAU,CAACsB,YAAY,EAAGX,IAAoB,IAAI;MAClE;MACA,IAAIP,aAAa,CAACU,aAAa,CAAC1E,QAAQ,IAAI,EAAE,EAAE;QAC9CgE,aAAa,CAACU,aAAa,GAAGH,IAAI,CAACtF,UAAU,CAAC0F,IAAI,CAC/CC,CAAC,IAAKA,CAAC,CAAC3E,mBAAmB,IAAI6D,oDAAc,CAACe,YAAY,CAC3D;;MAIL;MACAN,IAAI,CAACtF,UAAU,CAACkG,OAAO,CAACC,MAAM,IAAG;QAChC,IAAGpB,aAAa,CAACU,aAAa,CAACxE,QAAQ,IAAKkF,MAAM,CAAClF,QAAQ,EAC3D;UACE,IAAG,CAAC8D,aAAa,CAACqB,UAAU,CAACD,MAAM,CAACpF,QAAQ,CAAC,EAC7C;YACEgE,aAAa,CAACsB,SAAS,CAACC,IAAI,CAACH,MAAM,CAAC;;SAEvC,MAAI;UACH,IAAG,CAACpB,aAAa,CAACwB,UAAU,CAACJ,MAAM,CAACpF,QAAQ,CAAC,EAC7C;YACEgE,aAAa,CAACyB,WAAW,CAACF,IAAI,CAACH,MAAM,CAAC;;;MAG5C,CAAC,CAAC;MAEApB,aAAa,CAACc,SAAS,GAAGP,IAAI;MAC9BP,aAAa,CAACI,OAAO,CAACW,IAAI,CAACnB,sEAAU,CAACoB,cAAc,EAAET,IAAI,CAAC;MAC3DP,aAAa,CAACI,OAAO,CAACW,IAAI,CAACnB,sEAAU,CAACsB,YAAY,EAAEX,IAAI,CAAC;MACzD;MACA,IAAI,CAACN,mBAAmB,CAACgB,OAAO,CAAC,WAAW,EAAEV,IAAI,CAAC;IACrD,CAAC,CAAC;IAEF;IAEA;IAEAT,oDAAc,CAACO,EAAE,CAACT,sEAAU,CAAC8B,gBAAgB,EAAGnB,IAAoB,IAAI;MACtE;MACAP,aAAa,CAACc,SAAS,GAAGP,IAAI;MAC9B,IAAI,CAACN,mBAAmB,CAACgB,OAAO,CAAC,WAAW,EAAEV,IAAI,CAAC;MAEnDoB,UAAU,CAAC,MAAI;QACb3B,aAAa,CAACI,OAAO,CAACW,IAAI,CAAClB,0EAAc,CAAC+B,iBAAiB,EAAE5B,aAAa,CAACc,SAAS,CAAC;MACvF,CAAC,EAAC,IAAI,CAAC;IACT,CAAC,CAAC;IAEF;IAEA;IACAd,aAAa,CAACI,OAAO,CAACC,EAAE,CAACT,sEAAU,CAACiC,WAAW,EAAE,MAAK;MAEpD,IAAG7B,aAAa,CAACU,aAAa,CAAC1G,MAAM,IAAI,EAAE,EAC3C;QACE8F,oDAAc,CAACU,MAAM,CACnBZ,sEAAU,CAACiC,WAAW,EACtB7B,aAAa,CAACU,aAAa,EAAE1G,MAAM,EACnCgG,aAAa,CAACU,aAAa,CAC5B;OACF,MAAI;QACHoB,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;;IAGxD,CAAC,CAAC;IACF;IAGA;IAEAjC,oDAAc,CAACO,EAAE,CAACT,sEAAU,CAACoC,mBAAmB,EAAGzB,IAAgB,IAAI;MACrE,IACEA,IAAI,CAACtE,mBAAmB,IACxB,IAAI,CAAC+D,aAAa,CAACU,aAAc,CAACzE,mBAAmB,EAErD+D,aAAa,CAACI,OAAO,CAACW,IAAI,CAACnB,sEAAU,CAACoC,mBAAmB,EAAEzB,IAAI,CAAC;IACpE,CAAC,CAAC;IAEF;IAEA;IAEAP,aAAa,CAACI,OAAO,CAACC,EAAE,CAACT,sEAAU,CAACqC,eAAe,EAAG1B,IAAW,IAAG;MAElE;MAEIP,aAAa,CAACU,aAAa,CAACzD,QAAQ,GAAG,IAAI;MAC3C+C,aAAa,CAACU,aAAa,CAACxD,UAAU,GAAGgF,QAAQ,CAAC3B,IAAI,CAAC;MAGzD,IAAGP,aAAa,CAACU,aAAa,CAAC1G,MAAM,IAAI,EAAE,EAC3C;QACE8F,oDAAc,CAACU,MAAM,CAACZ,sEAAU,CAACqC,eAAe,EAAEjC,aAAa,CAACU,aAAa,CAAC1G,MAAM,EAClFgG,aAAa,CAACU,aAAa,CAAC;OAC/B,MAAI;QACHoB,OAAO,CAACK,GAAG,CAAC,mBAAmB,CAAC;;IAGtC,CAAC,CAAC;IAEF;IAEA;IAEArC,oDAAc,CAACO,EAAE,CAACT,sEAAU,CAACwC,uBAAuB,EAAG7B,IAAmB,IAAG;MAC3E,IAAG,IAAI,CAACP,aAAa,CAACqB,UAAU,CAACd,IAAI,CAACvF,cAAc,CAACqC,OAAO,CAACrB,QAAQ,CAAC,EACtE;QACE;QACA,IAAI,CAACgE,aAAa,CAACI,OAAO,CAACW,IAAI,CAAC,qBAAqB,EAAER,IAAI,CAACvF,cAAc,CAACqC,OAAO,CAACH,UAAU,CAAC;OAC/F,MACI,IAAG,IAAI,CAAC8C,aAAa,CAACqB,UAAU,CAACd,IAAI,CAACvF,cAAc,CAACS,OAAO,CAACO,QAAQ,CAAC,EAC3E;QACE;QACA,IAAI,CAACgE,aAAa,CAACI,OAAO,CAACW,IAAI,CAAC,qBAAqB,EAAER,IAAI,CAACvF,cAAc,CAACS,OAAO,CAACyB,UAAU,CAAC;OAC/F,MAAI;QACH;QACA,IAAI,CAAC8C,aAAa,CAACI,OAAO,CAACW,IAAI,CAAC,kBAAkB,CAAC;;IAEvD,CAAC,CAAC;IAEF;IAEA;IAEAjB,oDAAc,CAACO,EAAE,CAACT,sEAAU,CAACyC,YAAY,EAAG9B,IAAkB,IAAG;MAC/D,IAAI+B,eAAe,GAAG,IAAI,CAACtC,aAAa,CAACU,aAAa,CAAC1E,QAAQ;MAC/D,IAAI8B,mBAAmB,GAAGyC,IAAI,CAAC7F,WAAW,CAACkD,iBAAiB,CAAC5B,QAAQ;MACrE,IAAI+B,oBAAoB,GAAGwC,IAAI,CAAC7F,WAAW,CAACmD,kBAAkB,CAAC7B,QAAQ;MACvE,IAAGsG,eAAe,IAAGxE,mBAAmB,IAAI,IAAI,CAACkC,aAAa,CAACqB,UAAU,CAACvD,mBAAmB,CAAC,EAC9F;QACI,IAAI,CAACkC,aAAa,CAACI,OAAO,CAACW,IAAI,CAACnB,sEAAU,CAACyC,YAAY,EAAE;UAACE,UAAU,EAAE,IAAI;UAAEC,GAAG,EAAE,uBAAuB;UAC9CC,QAAQ,EAAElC,IAAI,CAAC7F,WAAW,CAACkD,iBAAiB,CAACV,UAAU;UACvDwF,UAAU,EAAEnC,IAAI,CAAC7F,WAAW,CAACmD,kBAAkB,CAACX;QAAU,CAAC,CAAC;OACzH,MACI,IAAGoF,eAAe,IAAIvE,oBAAoB,IAAI,IAAI,CAACiC,aAAa,CAACqB,UAAU,CAACtD,oBAAoB,CAAC,EACtG;QACE,IAAI,CAACiC,aAAa,CAACI,OAAO,CAACW,IAAI,CAACnB,sEAAU,CAACyC,YAAY,EAAE;UAACE,UAAU,EAAE,KAAK;UAAEC,GAAG,EAAE,wBAAwB;UACxDC,QAAQ,EAAElC,IAAI,CAAC7F,WAAW,CAACmD,kBAAkB,CAACX,UAAU;UACxDwF,UAAU,EAAEnC,IAAI,CAAC7F,WAAW,CAACkD,iBAAiB,CAACV;QAAU,CAAC,CAAC;;IAEjH,CAAC,CAAC;IAEF;IAEA;IAEA8C,aAAa,CAACI,OAAO,CAACC,EAAE,CAACT,sEAAU,CAAC+C,cAAc,EAAGpC,IAAW,IAAG;MACjEP,aAAa,CAACU,aAAa,CAAC9D,cAAc,GAAG2D,IAAI;MACjDT,oDAAc,CAACU,MAAM,CAACZ,sEAAU,CAAC+C,cAAc,EAAE3C,aAAa,CAACU,aAAa,CAAC1G,MAAM,EAAEgG,aAAa,CAACU,aAAa,CAAC;IACnH,CAAC,CAAC;IAEF;IAEA;IAEAZ,oDAAc,CAACO,EAAE,CAACT,sEAAU,CAACgD,UAAU,EAAGrC,IAAkB,IAAG;MAC7DuB,OAAO,CAACe,IAAI,CAAC,kDAAkD,EAACtC,IAAI,CAAC;MACrE,IAAGA,IAAI,CAACvF,cAAc,CAACqC,OAAO,CAACrB,QAAQ,IAAIgE,aAAa,CAACU,aAAa,CAAC1E,QAAQ,EAC/E;QACEgE,aAAa,CAACU,aAAa,CAACnE,UAAU,GAAG,IAAI;;MAE/C,IAAGgE,IAAI,CAACvF,cAAc,CAACS,OAAO,CAACO,QAAQ,IAAIgE,aAAa,CAACU,aAAa,CAAC1E,QAAQ,EAC/E;QACEgE,aAAa,CAACU,aAAa,CAACnE,UAAU,GAAG,IAAI;;MAG/CyD,aAAa,CAACI,OAAO,CAACW,IAAI,CAACnB,sEAAU,CAACgD,UAAU,EAAErC,IAAI,CAAC;MAEvDP,aAAa,CAACc,SAAS,GAAGP,IAAI;MAC9B,IAAI,CAACN,mBAAmB,CAACgB,OAAO,CAAC,WAAW,EAAEV,IAAI,CAAC;IAErD,CAAC,CAAC;IAEF;IAEA;IAEAT,oDAAc,CAACO,EAAE,CAACT,sEAAU,CAACkD,WAAW,EAAGvC,IAAkB,IAAG;MAC9DuB,OAAO,CAACe,IAAI,CAAC,uBAAuB,EAAEtC,IAAI,CAAC;MAE3C,IAAGA,IAAI,CAACvF,cAAc,CAACqC,OAAO,CAACrB,QAAQ,IAAIgE,aAAa,CAACU,aAAa,CAAC1E,QAAQ,EAC/E;QACEgE,aAAa,CAACU,aAAa,CAACnE,UAAU,GAAG,IAAI;;MAE/C,IAAGgE,IAAI,CAACvF,cAAc,CAACS,OAAO,CAACO,QAAQ,IAAIgE,aAAa,CAACU,aAAa,CAAC1E,QAAQ,EAC/E;QACEgE,aAAa,CAACU,aAAa,CAACnE,UAAU,GAAG,IAAI;;MAG/CyD,aAAa,CAACI,OAAO,CAACW,IAAI,CAACnB,sEAAU,CAACkD,WAAW,EAAEvC,IAAI,CAAC;MAExDP,aAAa,CAACc,SAAS,GAAGP,IAAI;MAC9B,IAAI,CAACN,mBAAmB,CAACgB,OAAO,CAAC,WAAW,EAAEV,IAAI,CAAC;IACrD,CAAC,CAAC;IAEF;IAEA;IAEAT,oDAAc,CAACO,EAAE,CAACT,sEAAU,CAACmD,QAAQ,EAAGxC,IAAW,IAAG;MAClDuB,OAAO,CAACe,IAAI,CAAC,oBAAoB,EAAEtC,IAAI,CAAC;MAGxC,IAAI,CAACP,aAAa,CAACgD,WAAW,GAAGzC,IAAI;MACrC;MACA,IAAI,CAACP,aAAa,CAACI,OAAO,CAACW,IAAI,CAAClB,0EAAc,CAACoD,gBAAgB,EAAE1C,IAAI,CAAC;IAE1E,CAAC,CAAC;IAEF;IAEA;IAEA,IAAI,CAACP,aAAa,CAACI,OAAO,CAACC,EAAE,CAACT,sEAAU,CAACsD,UAAU,EAAGC,QAAe,IAAG;MACtErD,oDAAc,CAACU,MAAM,CAACZ,sEAAU,CAACsD,UAAU,EAAEC,QAAQ,CAAC;IACxD,CAAC,CAAC;IAEFrD,oDAAc,CAACO,EAAE,CAACT,sEAAU,CAACwD,WAAW,EAAE7C,IAAI,IAAE;MAC9CuB,OAAO,CAACK,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC,CAAC;IAEF;EACF;;;AA5PWpC,YAAY;mBAAZA,YAAY,EAAAsD,+DAAA,CAAA3D,4EAAA,GAAA2D,+DAAA,CAAAG,qHAAA,GAAAH,+DAAA,CAAAK,mDAAA;AAAA;AAAZ3D,YAAY;QAAZA,YAAY;EAAA6D,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCJzBb,4DAAA,SAAI;MAAAA,oDAAA,qBAAc;MAAAA,0DAAA,EAAK;MAEvBA,4DAAA,UAAK;MAOIA,oDAAA,WAAI;MAAAA,0DAAA,EACN;MAEHA,4DAAA,SAAI;MAKCA,oDAAA,YAAK;MAAAA,0DAAA,EACP;MAEHA,4DAAA,UAAI;MAKCA,oDAAA,cAAM;MAAAA,0DAAA,EACR;MAIPA,uDAAA,qBAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtC2B;AAEe;AACjB;AACT;AACf;AACe;;AAE/C;AACO,MAAMuB,iBAAiB,GAAG,IAAID,yDAAc,CACjD,kBAAkB,CACnB;AAED;AACO,MAAME,gBAAgB,GAAG;EAC9BC,OAAO,EAAEF,iBAAiB;EAC1BG,QAAQ,EAAEL,gDAAQA;CACnB;AACD,MAMaM,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,SAAA,GAFRlF,wDAAY;AAAA;AAEbiF,SAAS;aAHT,CAAC;IAAEF,OAAO,EAAEL,6DAAgB;IAAEM,QAAQ,EAAEP,iEAAoBA;EAAA,CAAE,EAACK,gBAAgB,CAAC;EAAApF,OAAA,GADjFhB,oEAAa,EAAEa,iEAAgB;AAAA;AAIrB;;sHAAT0F,SAAS;IAAAE,YAAA,GALLnF,wDAAY;IAAAN,OAAA,GACjBhB,oEAAa,EAAEa,iEAAgB;EAAA;AAAA;;;;;;;;;;;;;;;;AClB3C,MAGamE,0BAA0B;EACrC1J,YAAA,GAAe;EAERoL,QAAQA,CAACC,OAAe;IAC7B,IAAIC,YAAY,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;MACjC,OAAOG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAACF,OAAO,CAAE,CAAC;KAClD,MAAM;MACL,OAAO,IAAI;;EAEf;EAEOnE,OAAOA,CAACwE,OAAe,EAAElF,IAAY;IAC1C8E,YAAY,CAACK,OAAO,CAACD,OAAO,EAAEF,IAAI,CAACI,SAAS,CAACpF,IAAI,CAAC,CAAC;EACrD;EAEOqF,UAAUA,CAACH,OAAe;IAC/BJ,YAAY,CAACQ,UAAU,CAACJ,OAAO,CAAC;EAClC;;AAjBWhC,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;SAA1BA,0BAA0B;EAAAqC,OAAA,EAA1BrC,0BAA0B,CAAAsC,IAAA;EAAAC,UAAA,EAFzB;AAAM;;;;;;;;;;;;;;;;ACJb,IAAKpG,UAkBX;AAlBD,WAAYA,UAAU;EACpBA,UAAA,qCAAiC;EACjCA,UAAA,2CAAuC;EACvCA,UAAA,2CAAuC;EACvCA,UAAA,iCAA6B;EAC7BA,UAAA,yCAAqC;EACrCA,UAAA,+BAA2B;EAC3BA,UAAA,+CAA2C;EAC3CA,UAAA,uCAAmC;EACnCA,UAAA,uDAAmD;EACnDA,UAAA,qCAAiC;EACjCA,UAAA,iCAA6B;EAC7BA,UAAA,qCAAiC;EACjCA,UAAA,6BAAyB;EACzBA,UAAA,+BAA2B;EAC3BA,UAAA,yBAAqB;EACrBA,UAAA,kCAA8B;EAC9BA,UAAA,+BAA4B;AAC9B,CAAC,EAlBWA,UAAU,KAAVA,UAAU;AAoBf,IAAKC,cAMX;AAND,WAAYA,cAAc;EACxBA,cAAA,2CAAyC;EACzCA,cAAA,+CAA2C;EAC3CA,cAAA,yCAAqC;EACrCA,cAAA,yCAAqC;AAEvC,CAAC,EANWA,cAAc,KAAdA,cAAc;;;;;;;;;;;;;;;;;;;ACnBM;AAEkB;AACuC;;;AAIzF,MAGa0D,aAAa;EAMxBxJ,YACqCkM,QAAkB,EAC7ChG,mBAA+C;IADpB,KAAAgG,QAAQ,GAARA,QAAQ;IACnC,KAAAhG,mBAAmB,GAAnBA,mBAAmB;IAP7B,KAAAS,aAAa,GAAe,IAAInF,4DAAU,EAAE;IAC5C,KAAAkG,WAAW,GAAiB,EAAE;IAC9B,KAAAH,SAAS,GAAiB,EAAE;IAC5B,KAAAR,SAAS,GAAmB,IAAIhH,+DAAa,EAAE;IAC/C,KAAAkJ,WAAW,GAAW,IAAI9E,wDAAM,EAAE;IAKhC+H,QAAQ,GAAG,IAAIvB,gDAAQ,EAAE;IACzBA,gDAAQ,CAACwB,cAAc,GAAG,KAAK;EACjC;EACOC,eAAeA,CAAA;IACpBzB,gDAAQ,CAACwB,cAAc,GAAG,KAAK;EACjC;EAEA,IAAW9F,OAAOA,CAAA;IAChB,OAAO,IAAI,CAAC6F,QAAQ;EACtB;EAEO5E,UAAUA,CAACrF,QAAgB;IAC9B,OAAO,IAAI,CAACsF,SAAS,CAAC8E,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrK,QAAQ,IAAIA,QAAQ,CAAC;EAC3D;EAEOwF,UAAUA,CAACxF,QAAgB;IAChC,OAAO,IAAI,CAACyF,WAAW,CAAC2E,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrK,QAAQ,IAAIA,QAAQ,CAAC;EAC3D;;AA3BWuH,aAAa;mBAAbA,aAAa,EAAAF,sDAAA,CAOduB,0DAAiB,GAAAvB,sDAAA,CAAA3D,0GAAA;AAAA;AAPhB6D,aAAa;SAAbA,aAAa;EAAAuC,OAAA,EAAbvC,aAAa,CAAAwC,IAAA;EAAAC,UAAA,EAFZ;AAAM;;;;;;;;;;;;;;;;;;;;;;;ACRU;AACe;AAE7C,MAAMQ,8BAA8B,GAAG,8CAA8C;AACrF,MAAMC,+BAA+B,GAAG,yBAAyB;AAEjE;AAC8C;AACvC,MAAM3G,cAAc,GAAG,IAAI4G,oEAA4B,EAAE,CAC7DE,OAAO,CAAC,GAAGJ,8BAA8B,UAAU,CAAC,CACpDK,KAAK,EAAE;AACH,MAAMC,cAAc,GAAG,IAAIJ,oEAA4B,EAAE,CAC7DE,OAAO,CAAC,GAAGJ,8BAA8B,UAAU,CAAC,CACpDK,KAAK,EAAE;AACV;AACA,IAAIE,MAAM,GAAG,IAAI;AAEjB;AACA,MAAMC,MAAM,GAAG,IAAIT,wCAAI,EAAE;AACzBS,MAAM,CAAC3G,EAAE,CAAC,MAAM,EAAG4G,EAAE,IAAI;EACvB,MAAMC,YAAY;IAAA,IAAAC,IAAA,GAAAC,4HAAA,CAAG,aAAW;MAC9BL,MAAM,GAAGE,EAAE;MACX;MAEA,MAAMnH,cAAc,CAACuH,KAAK,EAAE;MAC5B,MAAMP,cAAc,CAACO,KAAK,EAAE;MAE5B;MACA,MAAMP,cAAc,CAACtG,MAAM,CAAC,UAAU,EAAE,aAAa,EAAEuG,MAAM,CAAC;IAChE,CAAC;IAAA,gBATKG,YAAYA,CAAA;MAAA,OAAAC,IAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;EAAA,GASjB;EAEDL,YAAY,EAAE;AAChB,CAAC,CAAC;AAEFM,sEAAA,EAAwB,CACrBE,eAAe,CAAC1C,sDAAS,CAAC,CAC1B2C,KAAK,CAAEC,GAAG,IAAK9F,OAAO,CAACC,KAAK,CAAC6F,GAAG,CAAC,CAAC","sources":["./src/Types/interfaces.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/middleware/localStorageService/local-storage-service.service.ts","./src/app/middleware/socketService.type.ts","./src/app/middleware/socketservice.service.ts","./src/main.ts"],"sourcesContent":["\r\n\r\nexport class MatchRoomData {\r\n  roomId: string = \"\";\r\n  name: string = \"\";\r\n  matchType: string = \"\";\r\n  roomCreatedAt: string = \"\";\r\n  roomCreatedBy: string = \"\";\r\n  maxBalls:number = 0;\r\n  totalWickets:number = 0;\r\n  teamA = new Team();\r\n  teamB = new Team();\r\n  inMatchData  =  new InMatchDataType();\r\n  isTossStage:boolean = false;\r\n  firstInnings=new InningsDataType();\r\n  secondInnings=new InningsDataType();\r\n  currentInnings=new InningsDataType();\r\n  playerList: PlayerData[] = [];\r\n  gameOver: boolean =false;\r\n}\r\n\r\nclass Team{\r\n  name: string = \"\";\r\n  customDisplayName: string = \"\";\r\n  isBatting:boolean =false;\r\n  isBowling:boolean  = false;\r\n  captain  = new PlayerData();\r\n  onStrike= new PlayerData();\r\n  bowling= new PlayerData();\r\n  player1= new PlayerData() ;\r\n  player2= new PlayerData() ;\r\n  thisOver:number[] = [];\r\n  thisOverDisplay:string[] = [];\r\n  players:PlayerData[] = [];\r\n}\r\nexport interface IMatchRoomData {\r\n  roomId: string;\r\n  name: string;\r\n  matchType: string;\r\n  roomCreatedAt: string;\r\n  roomCreatedBy: string;\r\n  maxBalls:number;\r\n  totalWickets:number;\r\n  teamA: Team;\r\n  teamB: Team\r\n  inMatchData: InMatchData\r\n  isTossStage:boolean;\r\n  firstInnings: InningsData;\r\n  secondInnings: InningsData;\r\n  currentInnings: InningsData;\r\n  playerList: PlayerData[];\r\n}\r\n\r\nexport class PlayerData {\r\n  roomId: string = '';\r\n  roomIdString: string = '';\r\n  playerId: string = '';\r\n  currentConnectionId: string = '';\r\n  teamName: string = '';\r\n  name: string = '';\r\n  roomName:string  = \"\";\r\n  number: number = 0;\r\n  runs: number = 0;\r\n  wicketsLeft: number = 0;\r\n  isOnStrike: boolean = false;\r\n  ballsPlayed: number = 0;\r\n  isBatting: boolean = false;\r\n  hasWonToss: boolean = false;\r\n  runRate: number = 0;\r\n  strikeRate: number = 0;\r\n  captainsChoice: string = \"\";\r\n\r\n  isTossing: boolean = false;\r\n  isCaptain: boolean = false;\r\n  isHeads: boolean = false;\r\n  isReady: boolean = false;\r\n  isLocked: boolean = false;\r\n  lockedWith: number = 0;\r\n  hasSelectedNumber: boolean = false;\r\n}\r\n\r\n\r\n\r\nexport interface InningsData {\r\n  name: string;\r\n  isOn: boolean;\r\n  batting: PlayerData;\r\n  bowling: PlayerData;\r\n  battingTeam: Team;\r\n  bowlingTeam: Team;\r\n  ballsPlayed: number;\r\n  wickets: number;\r\n  runs: number;\r\n}\r\nexport class InningsDataType{\r\n  name:string = \"1st\";\r\n  isOn = false;\r\n  batting= new PlayerData();\r\n  bowling=new PlayerData();\r\n  battingTeam: Team = new Team();\r\n  bowlingTeam: Team = new Team();\r\n  ballsPlayed: number= 0;\r\n  wickets: number = 0;\r\n  runs: number= 0;\r\n}\r\n\r\n export interface InMatchData\r\n{\r\n      isSameNumber :boolean;\r\n      playerWithHeads :PlayerData;\r\n      playerWithTails :PlayerData;\r\n      playerWithTossWin :PlayerData;\r\n      playerWithTossLoss :PlayerData;\r\n      playerWithTossWinId :string;\r\n      playerWithTossLossId :string;\r\n  \r\n}\r\n\r\nexport class InMatchDataType{\r\n  isSameNumber :boolean = false;\r\n  playerWithHeads =new PlayerData();\r\n   playerWithTails =new PlayerData();\r\n   playerWithTossWin =new PlayerData();\r\n   playerWithTossLoss =new PlayerData();\r\n   playerWithTossWinId :string = \"\";\r\n   playerWithTossLossId :string = \"\";\r\n}\r\n\r\nexport enum InningsName\r\n{\r\n    First = 1,\r\n    Second = 2\r\n}\r\n\r\nexport  enum MatchWinType\r\n{\r\n    IsDraw,\r\n    WonByRun,\r\n    WonByWicket\r\n}\r\nexport  class Result\r\n{\r\n    winnerTeam : Team  = new Team();\r\n    matchWinType :MatchWinType = MatchWinType.IsDraw;\r\n\r\n    wonByRun: number = 0;\r\n    wonByWicket:number = 0;\r\n    teamA:Team = new Team();\r\n    teamB :Team = new Team();\r\n}","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {\r\n  RouterModule,\r\n  Routes,\r\n} from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'setup', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'setup',\r\n        loadChildren: () =>\r\n          import('./setup/setup.module').then((m) => m.SetupModule),\r\n      },\r\n      {\r\n        path: 'game',\r\n        loadChildren: () =>\r\n          import('./game/game.module').then((m) => m.GameModule),\r\n      },\r\n      {\r\n        path: 'result',\r\n        loadChildren: () =>\r\n          import('./result/result.module').then((m) => m.ResultModule),\r\n      },\r\n    ],\r\n  },\r\n\r\n  // { path: 'not-found', component: PageNotFoundComponent },\r\n  // { path: 'access-denied', component: AccessDeniedComponent },\r\n  { path: '**', redirectTo: 'game' },\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [BrowserModule,FormsModule, RouterModule.forRoot(routes,  {useHash:true})],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { GameEvents, INternalEvents } from './middleware/socketService.type';\r\nimport { SocketService } from './middleware/socketservice.service';\r\nimport { gameconnection } from 'src/main';\r\nimport { IMatchRoomData, MatchRoomData, PlayerData, Result } from 'src/Types/interfaces';\r\nimport { LocalStorageServiceService } from './middleware/localStorageService/local-storage-service.service';\r\nimport { Router } from '@angular/router';\r\n//middleware socket handshakes\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'HCApp';\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(\r\n    private socketService: SocketService,\r\n    private localStorageService: LocalStorageServiceService,\r\n    private router: Router\r\n\r\n  ) {\r\n    // INITIAL FORM SUBMIT\r\n    socketService.Emitter.on(GameEvents.InitialFormSubmit, (data) => {\r\n      gameconnection.invoke(GameEvents.InitialFormSubmit, data);\r\n    });\r\n\r\n    //#region First PLAYER JOINED\r\n    gameconnection.on(GameEvents.FirstPlayerJoined, (data: IMatchRoomData) => {\r\n      socketService.CurrentPlayer = data.playerList.find(\r\n        (p) => p.currentConnectionId == gameconnection.connectionId\r\n      )!;\r\n      socketService.MatchData = data;\r\n      socketService.Emitter.emit(GameEvents.LOADGAMESCREEN, data);\r\n      // save data in lc\r\n      this.localStorageService.setData('matchData', data);\r\n    });\r\n\r\n    //#endregion\r\n\r\n    //#region  Other PLAYER JOINED\r\n\r\n    gameconnection.on(GameEvents.PLAYERJOINED, (data: IMatchRoomData) => {\r\n      //when the other player joins the room\r\n      if (socketService.CurrentPlayer.playerId == '') {\r\n        socketService.CurrentPlayer = data.playerList.find(\r\n          (p) => p.currentConnectionId == gameconnection.connectionId\r\n        )!;\r\n       \r\n      }\r\n\r\n     //setting teammates and opponents\r\n     data.playerList.forEach(player =>{\r\n      if(socketService.CurrentPlayer.teamName ==  player.teamName)\r\n      {\r\n        if(!socketService.isTeamMate(player.playerId))\r\n        {\r\n          socketService.Teammates.push(player);\r\n        }\r\n      }else{\r\n        if(!socketService.isOpponent(player.playerId))\r\n        {\r\n          socketService.OppoPlayers.push(player);\r\n        }\r\n      }\r\n    })\r\n      \r\n      socketService.MatchData = data;\r\n      socketService.Emitter.emit(GameEvents.LOADGAMESCREEN, data);\r\n      socketService.Emitter.emit(GameEvents.PLAYERJOINED, data);\r\n      // save data in lc\r\n      this.localStorageService.setData('matchData', data);\r\n    });\r\n\r\n    //#endregion\r\n\r\n    //#region All PLAYERS JOINED\r\n\r\n    gameconnection.on(GameEvents.AllPlayersJoined, (data: IMatchRoomData) =>{\r\n      //updating data on both localstorage and socketservice\r\n      socketService.MatchData = data;\r\n      this.localStorageService.setData('matchData', data);\r\n\r\n      setTimeout(()=>{\r\n        socketService.Emitter.emit(INternalEvents.InitiateTossStage, socketService.MatchData);\r\n      },1000)\r\n    })\r\n\r\n    //#endregion\r\n\r\n    //#region PLAYER READY\r\n    socketService.Emitter.on(GameEvents.PlayerReady, () => {\r\n      \r\n      if(socketService.CurrentPlayer.roomId != \"\")\r\n      {\r\n        gameconnection.invoke(\r\n          GameEvents.PlayerReady,\r\n          socketService.CurrentPlayer?.roomId,\r\n          socketService.CurrentPlayer\r\n        );\r\n      }else{\r\n        console.error(\"room id not found on current player\")\r\n      }      \r\n    \r\n    });\r\n    //#endregion\r\n\r\n\r\n    //#region PLAYER READY RECEIVED\r\n\r\n    gameconnection.on(GameEvents.PlayerReadyReceived, (data: PlayerData) => {\r\n      if (\r\n        data.currentConnectionId !=\r\n        this.socketService.CurrentPlayer!.currentConnectionId\r\n      )\r\n        socketService.Emitter.emit(GameEvents.PlayerReadyReceived, data);\r\n    });\r\n\r\n    //#endregion\r\n\r\n    //#region PLAYER CONFIRMED\r\n\r\n    socketService.Emitter.on(GameEvents.PlayerConfirmed, (data:string)=>{\r\n\r\n      // debugger\r\n        \r\n          socketService.CurrentPlayer.isLocked = true;\r\n          socketService.CurrentPlayer.lockedWith = parseInt(data);\r\n        \r\n  \r\n        if(socketService.CurrentPlayer.roomId != \"\")\r\n        {\r\n          gameconnection.invoke(GameEvents.PlayerConfirmed, socketService.CurrentPlayer.roomId, \r\n            socketService.CurrentPlayer)\r\n        }else{\r\n          console.log(\"room id not found\");\r\n        }\r\n     \r\n    })\r\n\r\n    //#endregion\r\n\r\n    //#region PLAYER CONFIRMED RECEIVED \r\n\r\n    gameconnection.on(GameEvents.PlayerConfirmedReceived, (data:IMatchRoomData)=>{\r\n      if(this.socketService.isTeamMate(data.currentInnings.batting.playerId))\r\n      {\r\n        //showing teammate the locked number\r\n        this.socketService.Emitter.emit(\"ShowTheLockedNumber\", data.currentInnings.batting.lockedWith)\r\n      }\r\n      else if(this.socketService.isTeamMate(data.currentInnings.bowling.playerId))\r\n      {\r\n        //showing teammate the locked number\r\n        this.socketService.Emitter.emit(\"ShowTheLockedNumber\", data.currentInnings.bowling.lockedWith)\r\n      }else{\r\n        //For SPectators\r\n        this.socketService.Emitter.emit(\"ShowOppoisLocked\")\r\n      }\r\n    })\r\n\r\n    //#endregion\r\n\r\n    //#region TOSS DECISION RECEIVED\r\n\r\n    gameconnection.on(GameEvents.TossDecision, (data:MatchRoomData)=>{\r\n      let currentPlayerId = this.socketService.CurrentPlayer.playerId;\r\n      let playerWithTossWinId = data.inMatchData.playerWithTossWin.playerId;\r\n      let playerWithTossLossId = data.inMatchData.playerWithTossLoss.playerId;\r\n      if(currentPlayerId ==playerWithTossWinId || this.socketService.isTeamMate(playerWithTossWinId))\r\n      {\r\n          this.socketService.Emitter.emit(GameEvents.TossDecision, {tosswinner: true, msg: \"You have won the toss\", \r\n                                                                    myNumber: data.inMatchData.playerWithTossWin.lockedWith,\r\n                                                                    oppoNumber: data.inMatchData.playerWithTossLoss.lockedWith})\r\n      }\r\n      else if(currentPlayerId == playerWithTossLossId || this.socketService.isTeamMate(playerWithTossLossId))\r\n      {\r\n        this.socketService.Emitter.emit(GameEvents.TossDecision, {tosswinner: false, msg: \"You have lost the toss\",\r\n                                                          myNumber: data.inMatchData.playerWithTossLoss.lockedWith,\r\n                                                          oppoNumber: data.inMatchData.playerWithTossWin.lockedWith})\r\n      }\r\n    })\r\n\r\n    //#endregion\r\n\r\n    //#region CAPTAINS CHOiCE \r\n\r\n    socketService.Emitter.on(GameEvents.CaptainsChoice, (data:string)=>{\r\n      socketService.CurrentPlayer.captainsChoice = data;\r\n      gameconnection.invoke(GameEvents.CaptainsChoice, socketService.CurrentPlayer.roomId, socketService.CurrentPlayer)\r\n    })\r\n\r\n    //#endregion\r\n\r\n    //#region START MATCH EVENT\r\n\r\n    gameconnection.on(GameEvents.StartMatch, (data:MatchRoomData)=>{\r\n      console.info(\"after receiving start match event from server : \",data);\r\n      if(data.currentInnings.batting.playerId == socketService.CurrentPlayer.playerId)\r\n      {\r\n        socketService.CurrentPlayer.isOnStrike = true;\r\n      }\r\n      if(data.currentInnings.bowling.playerId == socketService.CurrentPlayer.playerId)\r\n      {\r\n        socketService.CurrentPlayer.isOnStrike = true;\r\n      }\r\n\r\n      socketService.Emitter.emit(GameEvents.StartMatch, data);\r\n\r\n      socketService.MatchData = data;\r\n      this.localStorageService.setData('matchData', data);\r\n\r\n    })\r\n\r\n    //#endregion\r\n\r\n    //#region UPDATE SCORE EVENT\r\n\r\n    gameconnection.on(GameEvents.UpdateScore, (data:MatchRoomData)=>{\r\n      console.info(\"update score event : \", data);\r\n\r\n      if(data.currentInnings.batting.playerId == socketService.CurrentPlayer.playerId)\r\n      {\r\n        socketService.CurrentPlayer.isOnStrike = true;\r\n      }\r\n      if(data.currentInnings.bowling.playerId == socketService.CurrentPlayer.playerId)\r\n      {\r\n        socketService.CurrentPlayer.isOnStrike = true;\r\n      }\r\n\r\n      socketService.Emitter.emit(GameEvents.UpdateScore, data);\r\n\r\n      socketService.MatchData = data;\r\n      this.localStorageService.setData('matchData', data);\r\n    })\r\n\r\n    //#endregion\r\n\r\n    //#region GAME OVER EVENT\r\n\r\n    gameconnection.on(GameEvents.GameOver, (data:Result)=>{\r\n        console.info(\"game over event : \", data);\r\n\r\n\r\n        this.socketService.MatchResult = data;\r\n        //send show result event to game comp\r\n        this.socketService.Emitter.emit(INternalEvents.ShowMatchWinLose, data);\r\n       \r\n    })\r\n\r\n    //#endregion\r\n\r\n    //#region DELETE ROOM\r\n\r\n    this.socketService.Emitter.on(GameEvents.DeleteRoom, (roomname:string)=>{\r\n      gameconnection.invoke(GameEvents.DeleteRoom, roomname);\r\n    })\r\n\r\n    gameconnection.on(GameEvents.RoomDeleted, data=>{\r\n      console.log(\"previous room deleted\");\r\n    })\r\n\r\n    //#endregion\r\n  }\r\n}\r\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\r\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n<h2>App is working</h2>\r\n\r\n<nav>\r\n  <ul>\r\n    <li>\r\n      <a\r\n        routerLink=\"/game\"\r\n        routerLinkActive=\"active\"\r\n        ariaCurrentWhenActive=\"page\"\r\n        >Game</a\r\n      >\r\n    </li>\r\n    <li>\r\n      <a\r\n        routerLink=\"/setup\"\r\n        routerLinkActive=\"active\"\r\n        ariaCurrentWhenActive=\"page\"\r\n        >Setup</a\r\n      >\r\n    </li>\r\n    <li>\r\n      <a\r\n        routerLink=\"/result\"\r\n        routerLinkActive=\"active\"\r\n        ariaCurrentWhenActive=\"page\"\r\n        >Result</a\r\n      >\r\n    </li>\r\n  </ul>\r\n</nav>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport Emittery from 'emittery';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\n// Create a token for the Emittery service\r\nexport const EMITTERY_INSTANCE = new InjectionToken<Emittery>(\r\n  'EmitteryInstance'\r\n);\r\n\r\n// Provide the Emittery service using the created token\r\nexport const emitteryProvider = {\r\n  provide: EMITTERY_INSTANCE,\r\n  useClass: Emittery,\r\n};\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, AppRoutingModule],\r\n  providers: [{ provide: LocationStrategy, useClass: HashLocationStrategy },emitteryProvider],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatchRoomData } from 'src/Types/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LocalStorageServiceService {\r\n  constructor() {}\r\n\r\n  public loadData(datakey: string): MatchRoomData | null {\r\n    if (localStorage.getItem(datakey)) {\r\n      return JSON.parse(localStorage.getItem(datakey)!);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public setData(dataKey: string, data: object) {\r\n    localStorage.setItem(dataKey, JSON.stringify(data));\r\n  }\r\n\r\n  public deleteData(dataKey: string) {\r\n    localStorage.removeItem(dataKey);\r\n  }\r\n}\r\n","export enum GameEvents {\r\n  GamePageLoaded = 'gamepageLoaded',\r\n  InitialFormSubmit = 'initialFormSubmit',\r\n  FirstPlayerJoined = 'FirstPlayerJoined',\r\n  PLAYERJOINED = 'PLAYERJOINED',\r\n  AllPlayersJoined = \"AllPlayersJoined\",\r\n  PlayerReady = 'PlayerReady',\r\n  PlayerReadyReceived = 'PlayerReadyReceived',\r\n  PlayerConfirmed = 'PlayerConfirmed',\r\n  PlayerConfirmedReceived = 'PlayerConfirmedReceived',\r\n  LOADGAMESCREEN = 'LOADGAMESCREEN',\r\n  TossDecision = \"TossDecision\",\r\n  CaptainsChoice = \"CaptainsChoice\",\r\n  StartMatch = \"StartMatch\",\r\n  UpdateScore = \"UpdateScore\",\r\n  GameOver = \"GameOver\",\r\n  DeleteRoom = \"DeleteMatchRoom\",\r\n  RoomDeleted  = \"RoomDeleted\"\r\n}\r\n\r\nexport enum INternalEvents {\r\n  InitiateTossStage  =  \"InitiateTossStage\",\r\n  ShowTheLockedNumber = \"ShowTheLockedNumber\",\r\n  ShowOppoisLocked = \"ShowOppoisLocked\",\r\n  ShowMatchWinLose = \"ShowMatchWinLose\",\r\n  \r\n}","import { Inject, Injectable } from '@angular/core';\r\nimport Emittery from 'emittery';\r\nimport { gameconnection } from 'src/main';\r\nimport { EMITTERY_INSTANCE } from '../app.module';\r\nimport { IMatchRoomData, MatchRoomData, PlayerData, Result } from 'src/Types/interfaces';\r\nimport { GameEvents } from './socketService.type';\r\nimport { LocalStorageServiceService } from './localStorageService/local-storage-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SocketService {\r\n  CurrentPlayer: PlayerData = new PlayerData();\r\n  OppoPlayers: PlayerData[] = [];\r\n  Teammates: PlayerData[] = [];\r\n  MatchData: IMatchRoomData = new MatchRoomData();\r\n  MatchResult: Result = new Result();\r\n  constructor(\r\n    @Inject(EMITTERY_INSTANCE) private emittery: Emittery,\r\n    private localStorageService: LocalStorageServiceService\r\n  ) {\r\n    emittery = new Emittery();\r\n    Emittery.isDebugEnabled = false;\r\n  }\r\n  public TurnOffDebugger() {\r\n    Emittery.isDebugEnabled = false;\r\n  }\r\n\r\n  public get Emitter() {\r\n    return this.emittery;\r\n  }\r\n\r\n  public isTeamMate(playerId: string):boolean{\r\n      return this.Teammates.some(x => x.playerId == playerId)\r\n  }\r\n\r\n  public isOpponent(playerId: string):boolean{\r\n    return this.OppoPlayers.some(x => x.playerId == playerId);\r\n  }\r\n}\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { Peer } from 'peerjs';\r\nimport { AppModule } from './app/app.module';\r\n\r\nconst SignallingServerURL_Production = \"https://hc220230626063443.azurewebsites.net/\"\r\nconst SignallingServerURL_Development = \"https://localhost:44383\"\r\n\r\n//#region SIGNALR CONNECTIONs\r\nimport * as signalR from '@microsoft/signalr';\r\nexport const gameconnection = new signalR.HubConnectionBuilder()\r\n  .withUrl(`${SignallingServerURL_Production}/gamehub`)\r\n  .build();\r\nexport const chatconnection = new signalR.HubConnectionBuilder()\r\n  .withUrl(`${SignallingServerURL_Production}/chathub`)\r\n  .build();\r\n//#endregion\r\nlet userId = null;\r\n\r\n// peer js\r\nconst myPeer = new Peer();\r\nmyPeer.on('open', (id) => {\r\n  const startSignalR = async () => {\r\n    userId = id;\r\n    // userId = Math.random().toString();\r\n\r\n    await gameconnection.start();\r\n    await chatconnection.start();\r\n\r\n    // await chatconnection.invoke('NewConnection', userId);\r\n    await chatconnection.invoke('JoinRoom', 'FIRST_LOBBY', userId);\r\n  };\r\n\r\n  startSignalR();\r\n});\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"names":["MatchRoomData","constructor","roomId","name","matchType","roomCreatedAt","roomCreatedBy","maxBalls","totalWickets","teamA","Team","teamB","inMatchData","InMatchDataType","isTossStage","firstInnings","InningsDataType","secondInnings","currentInnings","playerList","gameOver","customDisplayName","isBatting","isBowling","captain","PlayerData","onStrike","bowling","player1","player2","thisOver","thisOverDisplay","players","roomIdString","playerId","currentConnectionId","teamName","roomName","number","runs","wicketsLeft","isOnStrike","ballsPlayed","hasWonToss","runRate","strikeRate","captainsChoice","isTossing","isCaptain","isHeads","isReady","isLocked","lockedWith","hasSelectedNumber","isOn","batting","battingTeam","bowlingTeam","wickets","isSameNumber","playerWithHeads","playerWithTails","playerWithTossWin","playerWithTossLoss","playerWithTossWinId","playerWithTossLossId","InningsName","MatchWinType","Result","winnerTeam","matchWinType","IsDraw","wonByRun","wonByWicket","FormsModule","BrowserModule","RouterModule","routes","path","redirectTo","pathMatch","children","loadChildren","then","m","SetupModule","GameModule","ResultModule","AppRoutingModule","forRoot","useHash","imports","i1","exports","GameEvents","INternalEvents","gameconnection","AppComponent","socketService","localStorageService","router","title","Emitter","on","InitialFormSubmit","data","invoke","FirstPlayerJoined","CurrentPlayer","find","p","connectionId","MatchData","emit","LOADGAMESCREEN","setData","PLAYERJOINED","forEach","player","isTeamMate","Teammates","push","isOpponent","OppoPlayers","AllPlayersJoined","setTimeout","InitiateTossStage","PlayerReady","console","error","PlayerReadyReceived","PlayerConfirmed","parseInt","log","PlayerConfirmedReceived","TossDecision","currentPlayerId","tosswinner","msg","myNumber","oppoNumber","CaptainsChoice","StartMatch","info","UpdateScore","GameOver","MatchResult","ShowMatchWinLose","DeleteRoom","roomname","RoomDeleted","i0","ɵɵdirectiveInject","SocketService","i2","LocalStorageServiceService","i3","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","HashLocationStrategy","LocationStrategy","Emittery","InjectionToken","EMITTERY_INSTANCE","emitteryProvider","provide","useClass","AppModule","bootstrap","declarations","loadData","datakey","localStorage","getItem","JSON","parse","dataKey","setItem","stringify","deleteData","removeItem","factory","ɵfac","providedIn","emittery","isDebugEnabled","TurnOffDebugger","some","x","ɵɵinject","Peer","SignallingServerURL_Production","SignallingServerURL_Development","signalR","HubConnectionBuilder","withUrl","build","chatconnection","userId","myPeer","id","startSignalR","_ref","_asyncToGenerator","start","apply","arguments","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}